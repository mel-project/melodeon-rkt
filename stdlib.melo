provide CoinID
provide CoinData
provide Transaction
provide RawCoinID
provide RawCoinData
provide Hash

provide env_spender_tx
provide env_spender_tx_hash
provide env_parent_tx_hash
provide env_parent_index
provide env_self_hash
provide env_parent_value
provide env_parent_denom
provide env_parent_data
provide env_parent_height
provide env_spender_index
provide env_last_header

struct CoinID {
	txhash: %[32],
	index: Nat
}

struct CoinData {
	covhash: %[32],
	value: Nat,
	denom: Nat,
	additional_data: Any,
}

alias RawCoinID = [%[32], Nat]
alias RawCoinData = [%[32], Nat, Nat, Any]
alias Hash = %[32]

struct Transaction {
	kind: Nat,
	inputs: [RawCoinID *],
	outputs: [RawCoinData *],
	fee: Nat,
	scripts: [%[]*],
	data: %[],
	sigs: [%[]*]
}

# Wrappers for the environment

def env_spender_tx() =
	let raw_tx = unsafe cast extern "SPENDER-TX" : [Any * 7] in
	Transaction {
		unsafe cast raw_tx[0] : Nat,
		unsafe cast raw_tx[1] : [RawCoinID *],
		unsafe cast raw_tx[2] : [RawCoinData *],
		unsafe cast raw_tx[3] : Nat,
		unsafe cast raw_tx[4] : [%[]*],
		unsafe cast raw_tx[5] : %[],
		unsafe cast raw_tx[5] : [%[]*]
	}
	
def env_spender_tx_hash() = unsafe cast extern "SPENDER-TX-HASH" : Hash
def env_parent_tx_hash() = unsafe cast extern "PARENT-TX-HASH" : Hash
def env_parent_index() = unsafe cast extern "PARENT-INDEX" : Nat
def env_self_hash() = unsafe cast extern "SELF-HASH" : Hash
def env_parent_value() = unsafe cast extern "PARENT-VALUE" : Nat
def env_parent_denom() = unsafe cast extern "PARENT-DENOM" : Nat
def env_parent_data() = unsafe cast extern "PARENT-DATA" : %[]
def env_parent_height() = unsafe cast extern "PARENT-HEIGHT" : Nat
def env_spender_index() = unsafe cast extern "SPENDER-INDEX" : Nat
# TODO: last header
